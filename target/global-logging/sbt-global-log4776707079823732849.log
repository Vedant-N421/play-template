[0m[[0m[0mdebug[0m] [0m[0m> Exec(testOnly *ApplicationControllerSpec, Some(371a6f79-ba67-487e-8bcb-3e89c2ffbe5d), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / testOnly[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mExporting web-assets:play-template[0m
[0m[[0m[0mdebug[0m] [0m[0mExporting web-assets-test:play-template[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationControllerSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .index[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 200 OK[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .create[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a book in the database[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .create with a bad request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .create duplicate request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a book in the database and catch the duplicate request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .read[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a book in the database by id[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .read with a bad request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .readAny[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a book in the database by name[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .readAny[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a book in the database by numSales[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .readAny with a bad request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .readAny with a bad field request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .update()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should update a book in the database by id[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .partialUpdate()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should partially update a field of a book in the database by id[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .partialUpdate() with a request that does not find a book[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a bad request and not change any books in the database[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .partialUpdate() with a good request but bad field change[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not make any changes to the book in the database[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .update() with a bad request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .delete()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should delete a book in the database by id[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .delete() with a bad request[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 2 seconds, 556 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 17[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 1, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 17, failed 0, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll tests passed.[0m[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 3 s, completed 1 Dec 2023, 16:48:22[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
